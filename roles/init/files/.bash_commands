shell() {
  local shellcmd=$(ps -p $$ | tail -n 1 | awk {'print $4'})
  local shellname=$(echo "$shellcmd" | sed 's/\/bin\///')
  
  # sometimes zsh will show up as '-zsh' on first login
  if [[ "$shellname" != "zsh" ]] || [[ "$shellname" != "bash" ]]; then
    local shellname=$(echo $shellcmd | sed 's/-//')
  fi

  echo $shellname
  return
}

Xappend() {
  declare VAR="$1"
  shift

  for ARG in "$@"
  do
    if [[ -d "$ARG" ]]; then
      if [[ "$(shell)" == "bash" ]] && [[ ":${!VAR}:" != *":$ARG:"* ]]; then
        export $VAR="${!VAR:+"${!VAR}:"}$ARG"
      elif [[ "$(shell)" == "zsh" ]] && [[ ":${(P)VAR}:" != *":$ARG:"* ]] ; then
        export $VAR="${${(P)VAR}:+"${(P)VAR}:"}$ARG"
      else
        printf "$ARG exists in $VAR\n"
      fi
    else
      printf "$ARG is not a directory\n"
    fi
  done
}

Xprepend() {
  declare VAR="$1"
  shift

  for ((i=$#; i>0; i--)); 
  do
    [[ $(shell) == "bash" ]] && local ARG="${!i}"
    [[ $(shell) == "zsh" ]]  && local ARG="$@[$i]"

    if [[ -d "$ARG" ]]; then
      if [[ "$(shell)" == "bash" ]] && [[ ":${!VAR}:" != *":$ARG:"* ]]; then
        export $VAR="$ARG${!VAR:+":${!VAR}"}"
      elif [[ "$(shell)" == "zsh" ]] && [[ ":${(P)VAR}:" != *":$ARG:"* ]]; then
        export $VAR="$ARG${${(P)VAR}:+":${(P)VAR}"}"
      else
        printf "$ARG exists in $VAR\n"
      fi
    else
      printf "$ARG is not a directory\n"
    fi
  done
}

pathappend()  { 
  Xappend PATH $@
}

pathprepend() { 
  Xprepend PATH $@
}

ldpathappend() {
  Xappend LD_LIBRARY_PATH $@
}

ldpathprepend() {
  Xprepend LD_LIBRARY_PATH $@
}
